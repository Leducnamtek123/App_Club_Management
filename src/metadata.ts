/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/user/dtos/user-simple.dto"]: await import("./modules/user/dtos/user-simple.dto"),
        ["./constants/role-type"]: await import("./constants/role-type"),
        ["./constants/user-status"]: await import("./constants/user-status"),
        ["./constants/enum/salutation.enum"]: await import("./constants/enum/salutation.enum"),
        ["./modules/branch/dtos/branch.dto"]: await import("./modules/branch/dtos/branch.dto"),
        ["./modules/user/dtos/user.dto"]: await import("./modules/user/dtos/user.dto"),
        ["./constants/enum/transaction-type.enum"]: await import("./constants/enum/transaction-type.enum"),
        ["./modules/branch/branch.entity"]: await import("./modules/branch/branch.entity"),
        ["./modules/user/user.entity"]: await import("./modules/user/user.entity"),
        ["./modules/membership-payment/membership-payment.entity"]: await import("./modules/membership-payment/membership-payment.entity"),
        ["./common/dto/abstract.dto"]: await import("./common/dto/abstract.dto"),
        ["./constants/language-code"]: await import("./constants/language-code"),
        ["./constants/enum/notification-type.enum"]: await import("./constants/enum/notification-type.enum"),
        ["./constants/order"]: await import("./constants/order"),
        ["./common/dto/page-meta.dto"]: await import("./common/dto/page-meta.dto"),
        ["./constants/enum/position.enum"]: await import("./constants/enum/position.enum"),
        ["./modules/membership-payment/dtos/membership-payment-report.dto"]: await import("./modules/membership-payment/dtos/membership-payment-report.dto"),
        ["./modules/auth/dto/token-payload.dto"]: await import("./modules/auth/dto/token-payload.dto"),
        ["./modules/transaction-category/dtos/transaction-category.dto"]: await import("./modules/transaction-category/dtos/transaction-category.dto"),
        ["./modules/transaction-category/transaction-category.entity"]: await import("./modules/transaction-category/transaction-category.entity"),
        ["./modules/finance/dtos/finance-report.dto"]: await import("./modules/finance/dtos/finance-report.dto"),
        ["./constants/enum/event-status.enum"]: await import("./constants/enum/event-status.enum"),
        ["./constants/enum/sponsorship-tier.enum"]: await import("./constants/enum/sponsorship-tier.enum"),
        ["./modules/event/dtos/event.dto"]: await import("./modules/event/dtos/event.dto"),
        ["./modules/event/event.entity"]: await import("./modules/event/event.entity"),
        ["./modules/sponsorship-tier/dtos/sponsorship-tier.dto"]: await import("./modules/sponsorship-tier/dtos/sponsorship-tier.dto"),
        ["./modules/sponsorship-tier/sponsorship-tier.entity"]: await import("./modules/sponsorship-tier/sponsorship-tier.entity"),
        ["./modules/sponsorship/dtos/sponsorship.dto"]: await import("./modules/sponsorship/dtos/sponsorship.dto"),
        ["./constants/enum/ticket-status.enum"]: await import("./constants/enum/ticket-status.enum"),
        ["./constants/enum/news-category.enum"]: await import("./constants/enum/news-category.enum"),
        ["./modules/zalo-notification/dtos/zalo-notification.dto"]: await import("./modules/zalo-notification/dtos/zalo-notification.dto"),
        ["./modules/membership-payment/dtos/membership-payment.dto"]: await import("./modules/membership-payment/dtos/membership-payment.dto"),
        ["./modules/membership-fee/dtos/create-membership-fee.dto"]: await import("./modules/membership-fee/dtos/create-membership-fee.dto"),
        ["./modules/membership-fee/dtos/membership-fee.dto"]: await import("./modules/membership-fee/dtos/membership-fee.dto"),
        ["./modules/auth/dto/login-payload.dto"]: await import("./modules/auth/dto/login-payload.dto"),
        ["./modules/auth/dto/user-logout.response.dto"]: await import("./modules/auth/dto/user-logout.response.dto"),
        ["./modules/transaction/dtos/transaction.dto"]: await import("./modules/transaction/dtos/transaction.dto"),
        ["./modules/sponsorship/dtos/sponsors-by-tier.dto"]: await import("./modules/sponsorship/dtos/sponsors-by-tier.dto"),
        ["./modules/ticket/dtos/ticket.dto"]: await import("./modules/ticket/dtos/ticket.dto"),
        ["./modules/news/dtos/news.dto"]: await import("./modules/news/dtos/news.dto")
    };
    return { "@nestjs/swagger/plugin": { "models": [[import("./modules/branch/branch.entity"), { "BranchEntity": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, leader: { required: false, type: () => Object }, members: { required: false, type: () => [Object] } } }], [import("./modules/user/dtos/user-simple.dto"), { "UserSimpleDto": { name: { required: true, type: () => String }, zaloId: { required: false, type: () => String, nullable: true }, phone: { required: false, type: () => String, nullable: true }, email: { required: false, type: () => String, nullable: true }, companyName: { required: false, type: () => String, nullable: true }, position: { required: true, type: () => String } } }], [import("./modules/branch/dtos/branch.dto"), { "BranchDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, leader: { required: false, type: () => t["./modules/user/dtos/user-simple.dto"].UserSimpleDto } } }], [import("./modules/user/dtos/user.dto"), { "UserDto": { name: { required: true, type: () => String }, role: { required: false, enum: t["./constants/role-type"].RoleType }, email: { required: false, type: () => String, nullable: true }, phone: { required: false, type: () => String, nullable: true }, avatar: { required: false, type: () => String, nullable: true }, zaloId: { required: false, type: () => String, nullable: true }, status: { required: true, enum: t["./constants/user-status"].UserStatus }, salutation: { required: true, enum: t["./constants/enum/salutation.enum"].Salutation }, position: { required: true, type: () => String }, companyName: { required: false, type: () => String }, address: { required: false, type: () => String }, branch: { required: false, type: () => t["./modules/branch/dtos/branch.dto"].BranchDto, nullable: true } } }], [import("./modules/membership-payment/dtos/membership-payment.dto"), { "MembershipPaymentDto": { user: { required: true, type: () => t["./modules/user/dtos/user.dto"].UserDto }, year: { required: true, type: () => Number }, description: { required: false, type: () => String }, branch: { required: false, type: () => t["./modules/branch/dtos/branch.dto"].BranchDto }, createdBy: { required: false, type: () => t["./modules/user/dtos/user.dto"].UserDto, nullable: true } } }], [import("./modules/finance/finance-report.abstract.entity"), { "FinanceEntity": { type: { required: true, enum: t["./constants/enum/transaction-type.enum"].TransactionType }, amount: { required: true, type: () => Number }, description: { required: false, type: () => String }, branch: { required: false, type: () => t["./modules/branch/branch.entity"].BranchEntity }, branch_id: { required: false, type: () => String }, createdBy: { required: false, type: () => t["./modules/user/user.entity"].UserEntity } } }], [import("./modules/membership-payment/membership-payment.entity"), { "MembershipPaymentEntity": { user: { required: true, type: () => t["./modules/user/user.entity"].UserEntity }, user_id: { required: true, type: () => String }, year: { required: true, type: () => Number }, type: { required: true, enum: t["./constants/enum/transaction-type.enum"].TransactionType } } }], [import("./modules/user/user.entity"), { "UserEntity": { name: { required: true, type: () => String }, role: { required: true, enum: t["./constants/role-type"].RoleType }, email: { required: true, type: () => String, nullable: true }, password: { required: true, type: () => String, nullable: true }, phone: { required: true, type: () => String, nullable: true }, avatar: { required: true, type: () => String, nullable: true }, refreshToken: { required: false, type: () => String, nullable: true }, zaloId: { required: false, type: () => String, nullable: true }, companyName: { required: true, type: () => String }, address: { required: true, type: () => String }, birthDate: { required: false, type: () => Date, nullable: true }, status: { required: true, enum: t["./constants/user-status"].UserStatus }, position: { required: true, type: () => String }, salutation: { required: true, enum: t["./constants/enum/salutation.enum"].Salutation }, branch: { required: false, type: () => t["./modules/branch/branch.entity"].BranchEntity }, branchId: { required: false, type: () => Object }, payments: { required: true, type: () => [t["./modules/membership-payment/membership-payment.entity"].MembershipPaymentEntity] }, news: { required: true, type: () => [Object] }, referrerName: { required: false, type: () => String } } }], [import("./common/dto/abstract.dto"), { "AbstractDto": { id: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, translations: { required: false, type: () => [t["./common/dto/abstract.dto"].AbstractTranslationDto] } }, "AbstractTranslationDto": {} }], [import("./common/abstract.entity"), { "AbstractEntity": { id: { required: true, type: () => Object }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date }, translations: { required: false } }, "AbstractTranslationEntity": { languageCode: { required: true, enum: t["./constants/language-code"].LanguageCode } } }], [import("./modules/membership-fee/dtos/membership-fee.dto"), { "MembershipFeeDto": { year: { required: true, type: () => Number }, amount: { required: true, type: () => Number } } }], [import("./modules/membership-fee/membership-fee.entity"), { "MembershipFeeEntity": { year: { required: true, type: () => Number }, amount: { required: true, type: () => Number } } }], [import("./modules/zalo-notification/dtos/zalo-notification.dto"), { "NotificationDto": { type: { required: true, enum: t["./constants/enum/notification-type.enum"].NotificationType }, message: { required: true, type: () => String }, recipients: { required: false, type: () => [t["./modules/user/dtos/user-simple.dto"].UserSimpleDto] } } }], [import("./modules/zalo-notification/zalo-notification.entity"), { "ZaloNotificationEntity": { type: { required: true, enum: t["./constants/enum/notification-type.enum"].NotificationType }, message: { required: true, type: () => String }, recipients: { required: false, type: () => [t["./modules/user/user.entity"].UserEntity] } } }], [import("./common/dto/page-options.dto"), { "PageOptionsDto": { order: { required: true, enum: t["./constants/order"].Order }, page: { required: true, type: () => Number }, take: { required: true, type: () => Number }, q: { required: false, type: () => String } } }], [import("./common/dto/page-meta.dto"), { "PageMetaDto": { page: { required: true, type: () => Number }, take: { required: true, type: () => Number }, itemCount: { required: true, type: () => Number }, pageCount: { required: true, type: () => Number }, hasPreviousPage: { required: true, type: () => Boolean }, hasNextPage: { required: true, type: () => Boolean } } }], [import("./common/dto/page.dto"), { "PageDto": { data: { required: true }, meta: { required: true, type: () => t["./common/dto/page-meta.dto"].PageMetaDto } } }], [import("./modules/user/dtos/update-user.dto"), { "UpdateUserDto": { firstName: { required: false, type: () => String, maxLength: 50 }, lastName: { required: false, type: () => String, maxLength: 50 }, phone: { required: false, type: () => String, maxLength: 20 }, email: { required: false, type: () => String, maxLength: 255, format: "email" }, companyName: { required: false, type: () => String }, address: { required: false, type: () => String }, branch_id: { required: false, type: () => String } } }], [import("./modules/user/dtos/users-page-options.dto"), { "UsersPageOptionsDto": { branchId: { required: false, type: () => String }, status: { required: false, enum: t["./constants/user-status"].UserStatus }, role: { required: false, enum: t["./constants/role-type"].RoleType } } }], [import("./modules/auth/dto/user-register.dto"), { "UserRegisterDto": { phone: { required: true, type: () => String, maxLength: 13 }, password: { required: false, type: () => String }, name: { required: true, type: () => String }, email: { required: false, type: () => String }, zaloAccessToken: { required: false, type: () => String }, branchId: { required: false, type: () => String }, companyName: { required: false, type: () => String }, address: { required: false, type: () => String }, position: { required: true, enum: t["./constants/enum/position.enum"].Position }, salutation: { required: true, enum: t["./constants/enum/salutation.enum"].Salutation }, birthDate: { required: false, type: () => String }, role: { required: false, enum: t["./constants/role-type"].RoleType }, referrerName: { required: false, type: () => String } } }], [import("./modules/export/interfaces/export-users-pdf.dto"), { "ExportMembersPdfDto": { branchId: { required: false, type: () => String }, status: { required: false, enum: t["./constants/user-status"].UserStatus } } }], [import("./modules/membership-fee/dtos/create-membership-fee.dto"), { "CreateMembershipFeeDto": { year: { required: true, type: () => Number }, amount: { required: true, type: () => Number } } }], [import("./modules/membership-fee/dtos/update-membership-fee.dto"), { "UpdateMembershipFeeDto": { amount: { required: true, type: () => Number } } }], [import("./modules/membership-payment/dtos/create-membership-payment.dto"), { "CreateMembershipPaymentDto": { user_id: { required: true, type: () => Object }, year: { required: true, type: () => Number }, description: { required: false, type: () => String } } }], [import("./modules/membership-payment/dtos/membership-payments-page-options.dto"), { "MembershipPaymentsPageOptionsDto": { branchId: { required: false, type: () => String }, year: { required: false, type: () => String }, userId: { required: false, type: () => String } } }], [import("./modules/membership-payment/dtos/membership-payment-report-options.dto"), { "MembershipPaymentReportOptionsDto": { startYear: { required: false, type: () => Number, minimum: 2000 }, endYear: { required: false, type: () => Number, minimum: 2000 }, branchId: { required: false, type: () => String }, userId: { required: false, type: () => String } } }], [import("./modules/membership-payment/dtos/membership-payment-report.dto"), { "PaymentStatusDto": { year: { required: true, type: () => Number }, status: { required: true, type: () => Number } }, "MembershipPaymentReportDto": { user: { required: true, type: () => t["./modules/user/dtos/user.dto"].UserDto }, payments: { required: true, type: () => [t["./modules/membership-payment/dtos/membership-payment-report.dto"].PaymentStatusDto] } } }], [import("./modules/auth/dto/token-payload.dto"), { "TokenPayloadDto": { expiresIn: { required: true, type: () => Number }, accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String } } }], [import("./modules/auth/dto/user-login.dto"), { "UserLoginDto": { email: { required: false, type: () => String }, phone: { required: false, type: () => String }, password: { required: true, type: () => String } } }], [import("./modules/auth/dto/change-password.dto"), { "ChangePasswordDto": { userId: { required: true, type: () => Object, format: "uuid" }, newPassword: { required: true, type: () => String, minLength: 6 } } }], [import("./modules/auth/dto/login-payload.dto"), { "LoginPayloadDto": { user: { required: true, type: () => t["./modules/user/dtos/user.dto"].UserDto }, token: { required: true, type: () => t["./modules/auth/dto/token-payload.dto"].TokenPayloadDto } } }], [import("./modules/auth/dto/refresh-token.dto"), { "RefreshTokenDto": { refreshToken: { required: true, type: () => String } } }], [import("./modules/auth/dto/user-logout.response.dto"), { "LogoutResponseDto": { message: { required: true, type: () => String } } }], [import("./modules/auth/dto/zalo-login.dto"), { "ZaloLoginDto": { accessToken: { required: true, type: () => String } } }], [import("./modules/auth/dto/user-zalo-register.dto"), { "RegisterZaloDto": { code: { required: true, type: () => String } } }], [import("./modules/branch/dtos/request-branch.dto"), { "RequestBranchDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, leaderId: { required: false, type: () => String } } }], [import("./modules/transaction-category/dtos/transaction-category.dto"), { "TransactionCategoryDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String } } }], [import("./modules/transaction-category/transaction-category.entity"), { "TransactionCategoryEntity": { name: { required: true, type: () => String }, description: { required: false, type: () => String } } }], [import("./modules/transaction/dtos/transaction.dto"), { "TransactionDto": { category_id: { required: false, type: () => String }, type: { required: true, enum: t["./constants/enum/transaction-type.enum"].TransactionType }, amount: { required: true, type: () => Number }, description: { required: false, type: () => String }, user: { required: false, type: () => t["./modules/user/dtos/user.dto"].UserDto }, category: { required: false, type: () => t["./modules/transaction-category/dtos/transaction-category.dto"].TransactionCategoryDto }, branch: { required: false, type: () => t["./modules/branch/dtos/branch.dto"].BranchDto }, createdBy: { required: false, type: () => t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/transaction/transaction.entity"), { "TransactionEntity": { category: { required: false, type: () => t["./modules/transaction-category/transaction-category.entity"].TransactionCategoryEntity }, category_id: { required: false, type: () => String } } }], [import("./modules/transaction/dtos/create-transaction.dto"), { "CreateTransactionDto": { categoryId: { required: false, type: () => String }, type: { required: true, enum: t["./constants/enum/transaction-type.enum"].TransactionType }, amount: { required: true, type: () => Number }, description: { required: false, type: () => String }, branchId: { required: false, type: () => Object } } }], [import("./modules/transaction/dtos/transactions-page-options.dto"), { "TransactionsPageOptionsDto": { user_id: { required: false, type: () => String }, category_id: { required: false, type: () => String }, type: { required: false, enum: t["./constants/enum/transaction-type.enum"].TransactionType }, startDate: { required: false, type: () => Date }, endDate: { required: false, type: () => Date }, branch_id: { required: false, type: () => Object } } }], [import("./modules/transaction/dtos/update-transaction.dto"), { "UpdateTransactionDto": { type: { required: false, enum: t["./constants/enum/transaction-type.enum"].TransactionType }, amount: { required: false, type: () => Number, minimum: 0 }, description: { required: false, type: () => String }, branch_id: { required: false, type: () => String } } }], [import("./modules/finance/dtos/finance-report-filter.dto"), { "FinanceReportFilterDto": { startDate: { required: false, type: () => String }, endDate: { required: false, type: () => String }, branch_id: { required: false, type: () => Object }, type: { required: false, enum: t["./constants/enum/transaction-type.enum"].TransactionType } } }], [import("./modules/finance/dtos/finance-report.dto"), { "TransactionTypeDetailDto": { count: { required: true, type: () => Number, minimum: 0 }, amount: { required: true, type: () => Number, minimum: 0 } }, "BranchDetailDto": { branchName: { required: true, type: () => String }, income: { required: true, type: () => t["./modules/finance/dtos/finance-report.dto"].TransactionTypeDetailDto }, expense: { required: true, type: () => t["./modules/finance/dtos/finance-report.dto"].TransactionTypeDetailDto } }, "FinanceReportDto": { totalIncome: { required: true, type: () => Number, minimum: 0 }, totalExpense: { required: true, type: () => Number, minimum: 0 }, balance: { required: true, type: () => Number }, totalTransactions: { required: true, type: () => Number, minimum: 0 }, totalMembershipPayments: { required: true, type: () => Number, minimum: 0 }, byType: { required: true, type: () => Object }, byBranch: { required: true, type: () => Object } } }], [import("./modules/event/dtos/event.dto"), { "EventDto": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, startDate: { required: true, type: () => Date }, endDate: { required: true, type: () => Date }, ticketClosingDate: { required: false, type: () => Date }, location: { required: true, type: () => String }, branch: { required: false, type: () => t["./modules/branch/dtos/branch.dto"].BranchDto }, branch_id: { required: false, type: () => String }, status: { required: true, enum: t["./constants/enum/event-status.enum"].EventStatus }, ticketPrice: { required: true, type: () => Number }, images: { required: false, type: () => [String] }, createdBy: { required: false, type: () => t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/event/event.entity"), { "EventEntity": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, startDate: { required: false, type: () => Date }, endDate: { required: false, type: () => Date }, ticketClosingDate: { required: false, type: () => Date }, location: { required: true, type: () => String }, branch: { required: false, type: () => t["./modules/branch/branch.entity"].BranchEntity }, branch_id: { required: false, type: () => String }, status: { required: true, enum: t["./constants/enum/event-status.enum"].EventStatus }, ticketPrice: { required: true, type: () => Number }, images: { required: false, type: () => [String] }, createdBy: { required: false, type: () => t["./modules/user/user.entity"].UserEntity }, created_by_id: { required: false, type: () => String } } }], [import("./modules/event/dtos/create-event.dto"), { "CreateEventDto": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, startDate: { required: true, type: () => String }, endDate: { required: true, type: () => String }, ticketClosingDate: { required: false, type: () => String }, location: { required: true, type: () => String }, branchId: { required: true, type: () => String }, status: { required: true, enum: t["./constants/enum/event-status.enum"].EventStatus }, ticketPrice: { required: false, type: () => Number } } }], [import("./modules/event/dtos/update-event.dto"), { "UpdateEventDto": { title: { required: false, type: () => String }, description: { required: false, type: () => String }, startDate: { required: true, type: () => String }, endDate: { required: true, type: () => String }, ticketClosingDate: { required: false, type: () => String }, location: { required: false, type: () => String }, branchId: { required: true, type: () => Object }, status: { required: true, enum: t["./constants/enum/event-status.enum"].EventStatus }, ticketPrice: { required: false, type: () => Number } } }], [import("./modules/event/dtos/events-page-options.dto"), { "EventsPageOptionsDto": { title: { required: false, type: () => String }, status: { required: false, enum: t["./constants/enum/event-status.enum"].EventStatus }, branchId: { required: false, type: () => Object }, isFree: { required: false, type: () => Boolean }, startDate: { required: false, type: () => Date }, endDate: { required: false, type: () => Date } } }], [import("./modules/sponsorship-tier/dtos/sponsorship-tier.dto"), { "SponsorshipTierDto": { name: { required: true, enum: t["./constants/enum/sponsorship-tier.enum"].SponsorshipTier }, minAmount: { required: true, type: () => Number }, event: { required: true, type: () => t["./modules/event/dtos/event.dto"].EventDto } } }], [import("./modules/sponsorship-tier/sponsorship-tier.entity"), { "SponsorshipTierEntity": { name: { required: true, enum: t["./constants/enum/sponsorship-tier.enum"].SponsorshipTier }, minAmount: { required: true, type: () => Number }, event: { required: true, type: () => t["./modules/event/event.entity"].EventEntity } } }], [import("./modules/sponsorship-tier/dtos/create-sponsorship-tier.dto"), { "CreateSponsorshipTierDto": { name: { required: true, enum: t["./constants/enum/sponsorship-tier.enum"].SponsorshipTier }, minAmount: { required: true, type: () => Number }, eventId: { required: true, type: () => Object } } }], [import("./modules/sponsorship/dtos/sponsorship.dto"), { "SponsorshipDto": { amount: { required: true, type: () => Number }, note: { required: false, type: () => String }, sponsor: { required: true, type: () => t["./modules/user/dtos/user.dto"].UserDto }, event: { required: true, type: () => t["./modules/event/dtos/event.dto"].EventDto }, tier: { required: false, type: () => t["./modules/sponsorship-tier/dtos/sponsorship-tier.dto"].SponsorshipTierDto }, logo: { required: false, type: () => String } } }], [import("./modules/sponsorship/sponsorship.entity"), { "SponsorshipEntity": { sponsor: { required: true, type: () => t["./modules/user/user.entity"].UserEntity }, event: { required: true, type: () => t["./modules/event/event.entity"].EventEntity }, note: { required: false, type: () => String }, tier: { required: false, type: () => t["./modules/sponsorship-tier/sponsorship-tier.entity"].SponsorshipTierEntity, nullable: true }, logo: { required: false, type: () => String } } }], [import("./modules/sponsorship-tier/dtos/update-sponsorship-tier.dto"), { "UpdateSponsorshipTierDto": { name: { required: false, enum: t["./constants/enum/sponsorship-tier.enum"].SponsorshipTier }, minAmount: { required: false, type: () => Number } } }], [import("./modules/sponsorship/dtos/create-sponsorship.dto"), { "CreateSponsorshipDto": { sponsorId: { required: true, type: () => Object }, eventId: { required: true, type: () => Object }, amount: { required: true, type: () => Number }, note: { required: false, type: () => String } } }], [import("./modules/sponsorship/dtos/sponsorships-page-options.dto"), { "SponsorshipsPageOptionsDto": { sponsorId: { required: false, type: () => Object }, eventId: { required: false, type: () => Object }, minAmount: { required: false, type: () => Number }, maxAmount: { required: false, type: () => Number } } }], [import("./modules/sponsorship/dtos/sponsors-by-tier.dto"), { "SponsorsByTierDto": { tier: { required: false, nullable: true }, sponsors: { required: true, type: () => [t["./modules/sponsorship/dtos/sponsorship.dto"].SponsorshipDto] } } }], [import("./modules/sponsorship/dtos/sponsor-ranking-pagination.dto"), { "SponsorRankingPaginationDto": { branchId: { required: false, type: () => Object }, eventId: { required: false, type: () => Object } } }], [import("./modules/sponsorship/dtos/sponsor-ranking.dto"), { "SponsorRankingDto": { sponsorId: { required: true, type: () => String }, sponsorName: { required: true, type: () => String }, totalAmount: { required: true, type: () => String }, eventCount: { required: true, type: () => Number } } }], [import("./modules/sponsorship/dtos/update-sponsorship.dto"), { "UpdateSponsorshipDto": { sponsorId: { required: false, type: () => Object }, eventId: { required: false, type: () => Object }, amount: { required: false, type: () => Number }, note: { required: false, type: () => String } } }], [import("./modules/ticket/dtos/ticket.dto"), { "TicketDto": { status: { required: true, enum: t["./constants/enum/ticket-status.enum"].TicketStatus }, qrCode: { required: false, type: () => String }, user: { required: true, type: () => t["./modules/user/dtos/user-simple.dto"].UserSimpleDto }, event: { required: true, type: () => t["./modules/event/dtos/event.dto"].EventDto } } }], [import("./modules/ticket/ticket.entity"), { "TicketEntity": { status: { required: true, enum: t["./constants/enum/ticket-status.enum"].TicketStatus }, qrCode: { required: false, type: () => String }, user: { required: true, type: () => t["./modules/user/user.entity"].UserEntity }, event: { required: true, type: () => t["./modules/event/event.entity"].EventEntity } } }], [import("./modules/ticket/dtos/tickets-page-options.dto"), { "TicketsPageOptionsDto": { userId: { required: false, type: () => Object }, eventId: { required: false, type: () => Object } } }], [import("./modules/news/dtos/create-news.dto"), { "CreateNewsDto": { title: { required: false, type: () => String }, content: { required: false, type: () => String }, category: { required: false, enum: t["./constants/enum/news-category.enum"].NewsCategory } } }], [import("./modules/news/news.entity"), { "NewsEntity": { title: { required: true, type: () => String }, content: { required: true, type: () => String }, thumbnail: { required: true, type: () => String, nullable: true }, isPublished: { required: true, type: () => Boolean }, publishedAt: { required: false, type: () => Date, nullable: true }, author: { required: true, type: () => Object }, authorId: { required: true, type: () => String }, category: { required: true, enum: t["./constants/enum/news-category.enum"].NewsCategory } } }], [import("./modules/news/dtos/news.dto"), { "NewsDto": { title: { required: true, type: () => String }, content: { required: true, type: () => String }, thumbnail: { required: false, type: () => String, nullable: true }, isPublished: { required: true, type: () => Boolean }, publishedAt: { required: false, type: () => Date, nullable: true }, author: { required: true, type: () => t["./modules/user/dtos/user-simple.dto"].UserSimpleDto }, category: { required: true, enum: t["./constants/enum/news-category.enum"].NewsCategory } } }], [import("./modules/news/dtos/news-page-options.dto"), { "NewsPageOptionsDto": { authorId: { required: false, type: () => String }, isPublished: { required: false, type: () => Boolean }, q: { required: false, type: () => String }, category: { required: false, enum: t["./constants/enum/news-category.enum"].NewsCategory } } }], [import("./modules/news/dtos/update-news.dto"), { "UpdateNewsDto": { title: { required: false, type: () => String }, content: { required: false, type: () => String }, isPublished: { required: false, type: () => Boolean }, category: { required: false, enum: t["./constants/enum/news-category.enum"].NewsCategory } } }], [import("./common/dto/create-translation.dto"), { "CreateTranslationDto": { languageCode: { required: true, enum: t["./constants/language-code"].LanguageCode }, text: { required: true, type: () => String } } }], [import("./modules/membership-payment/dtos/membership-report-filter.dto"), { "MembershipPaymentDto": { user_id: { required: true, type: () => Object }, year: { required: true, type: () => Number }, amount: { required: true, type: () => Number }, description: { required: false, type: () => String }, branch: { required: false, type: () => t["./modules/branch/dtos/branch.dto"].BranchDto }, createdBy: { required: false, type: () => t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/transaction-category/dtos/create-transaction-category.dto"), { "CreateTransactionCategoryDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String } } }]], "controllers": [[import("./modules/zalo-notification/zalo-notification.controller"), { "ZaloNotificationController": { "broadcast": {}, "remindFee": {}, "remindBirthday": {}, "getNotifications": {}, "getNotification": { type: t["./modules/zalo-notification/dtos/zalo-notification.dto"].NotificationDto } } }], [import("./modules/user/user.controller"), { "UserController": { "getUsers": {}, "getUser": { type: t["./modules/user/dtos/user.dto"].UserDto }, "approveUser": {}, "refuseUser": {}, "deleteUser": {}, "updateUser": { type: t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/membership-payment/membership-payment.controller"), { "MembershipPaymentController": { "createMembershipPayment": { type: t["./modules/membership-payment/dtos/membership-payment.dto"].MembershipPaymentDto }, "getAllMembershipPayments": {}, "getMembershipPaymentByUserAndYear": { type: t["./modules/membership-payment/dtos/membership-payment.dto"].MembershipPaymentDto }, "deleteMembershipPayment": {}, "getMembershipPaymentReport": {} } }], [import("./modules/membership-fee/membership-fee.controller"), { "MembershipFeeController": { "createMembershipFee": { type: t["./modules/membership-fee/dtos/create-membership-fee.dto"].CreateMembershipFeeDto }, "getAllMembershipFees": { type: [t["./modules/membership-fee/dtos/membership-fee.dto"].MembershipFeeDto] }, "getMembershipFeeByYear": { type: t["./modules/membership-fee/dtos/membership-fee.dto"].MembershipFeeDto }, "updateMembershipFee": { type: t["./modules/membership-fee/dtos/membership-fee.dto"].MembershipFeeDto }, "deleteMembershipFee": {} } }], [import("./modules/auth/auth.controller"), { "AuthController": { "userLogin": { type: t["./modules/auth/dto/login-payload.dto"].LoginPayloadDto }, "zaloLogin": { type: t["./modules/auth/dto/login-payload.dto"].LoginPayloadDto }, "userRegister": { type: t["./modules/user/dtos/user.dto"].UserDto }, "changePassword": {}, "refreshToken": { type: t["./modules/auth/dto/token-payload.dto"].TokenPayloadDto }, "userLogout": { type: t["./modules/auth/dto/user-logout.response.dto"].LogoutResponseDto }, "AuthZalo": {}, "getCurrentUser": { type: t["./modules/user/dtos/user.dto"].UserDto } } }], [import("./modules/branch/branch.controller"), { "BranchController": { "create": { type: t["./modules/branch/dtos/branch.dto"].BranchDto }, "findAll": {}, "findOne": { type: t["./modules/branch/dtos/branch.dto"].BranchDto }, "update": { type: t["./modules/branch/dtos/branch.dto"].BranchDto }, "remove": {} } }], [import("./modules/transaction/transaction.controller"), { "TransactionController": { "createTransaction": { type: t["./modules/transaction/dtos/transaction.dto"].TransactionDto }, "getAllTransactions": {}, "getTransactionById": { type: t["./modules/transaction/dtos/transaction.dto"].TransactionDto }, "updateTransaction": { type: t["./modules/transaction/dtos/transaction.dto"].TransactionDto }, "deleteTransaction": {} } }], [import("./modules/finance/finance-report.controller"), { "FinanceReportController": { "generateFinanceReport": { type: t["./modules/finance/dtos/finance-report.dto"].FinanceReportDto } } }], [import("./modules/export/export.controller"), { "ExportController": { "exportMembersPdf": {}, "downloadPdf": {} } }], [import("./modules/event/event.controller"), { "EventsController": { "createEvent": { type: t["./modules/event/dtos/event.dto"].EventDto }, "getAllEvents": {}, "getEventById": { type: t["./modules/event/dtos/event.dto"].EventDto }, "updateEvent": { type: t["./modules/event/dtos/event.dto"].EventDto }, "deleteEvent": {} } }], [import("./modules/sponsorship-tier/sponsorship-tier.controller"), { "SponsorshipTierController": { "createSponsorshipTier": { type: t["./modules/sponsorship-tier/dtos/sponsorship-tier.dto"].SponsorshipTierDto }, "getTiersByEvent": { type: [t["./modules/sponsorship-tier/dtos/sponsorship-tier.dto"].SponsorshipTierDto] }, "updateSponsorshipTier": { type: t["./modules/sponsorship-tier/dtos/sponsorship-tier.dto"].SponsorshipTierDto }, "deleteSponsorshipTier": {} } }], [import("./modules/sponsorship/sponsorship.controller"), { "SponsorshipController": { "createSponsorship": { type: t["./modules/sponsorship/dtos/sponsorship.dto"].SponsorshipDto }, "updateSponsorship": { type: t["./modules/sponsorship/dtos/sponsorship.dto"].SponsorshipDto }, "getSponsorRanking": {}, "getAllSponsorships": {}, "getSponsorshipById": { type: t["./modules/sponsorship/dtos/sponsorship.dto"].SponsorshipDto }, "deleteSponsorship": {}, "getSponsorsByTier": { type: [t["./modules/sponsorship/dtos/sponsors-by-tier.dto"].SponsorsByTierDto] } } }], [import("./modules/ticket/ticket.controller"), { "TicketController": { "registerForEvent": { type: t["./modules/ticket/dtos/ticket.dto"].TicketDto }, "confirmPayment": { type: t["./modules/ticket/dtos/ticket.dto"].TicketDto }, "getTicketsByUser": {} } }], [import("./modules/news/news.controller"), { "NewsController": { "getNews": {}, "getNewsById": { type: t["./modules/news/dtos/news.dto"].NewsDto }, "createNews": { type: t["./modules/news/dtos/news.dto"].NewsDto }, "updateNews": { type: t["./modules/news/dtos/news.dto"].NewsDto }, "deleteNews": {} } }]] } };
};